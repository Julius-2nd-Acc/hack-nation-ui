{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/server/trpc/trpc.ts"],"sourcesContent":["import { createTRPCReact } from '@trpc/react-query';\r\nimport type { AppRouter } from './router';\r\n\r\nexport const trpc = createTRPCReact<AppRouter>();\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAGO,MAAM,OAAO,CAAA,GAAA,0KAAA,CAAA,kBAAe,AAAD","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/app/trpc-provider.tsx"],"sourcesContent":["\"use client\";\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { trpc } from '../server/trpc/trpc';\r\nimport { httpBatchLink } from '@trpc/client';\r\nimport { useState } from 'react';\r\n\r\nexport function TrpcProvider({ children }: { children: React.ReactNode }) {\r\n    const [queryClient] = useState(() => new QueryClient());\r\n    const [trpcClient] = useState(() =>\r\n        trpc.createClient({\r\n            links: [\r\n                httpBatchLink({\r\n                    url: '/api/trpc',\r\n                }),\r\n            ],\r\n        })\r\n    );\r\n\r\n    return (\r\n        <trpc.Provider client={trpcClient} queryClient={queryClient}>\r\n            <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n        </trpc.Provider>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;AAAA;AACA;AAJA;;;;;;AAMO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACpE,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,IAAI,6KAAA,CAAA,cAAW;IACpD,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAC1B,sHAAA,CAAA,OAAI,CAAC,YAAY,CAAC;YACd,OAAO;gBACH,CAAA,GAAA,yKAAA,CAAA,gBAAa,AAAD,EAAE;oBACV,KAAK;gBACT;aACH;QACL;IAGJ,qBACI,8OAAC,sHAAA,CAAA,OAAI,CAAC,QAAQ;QAAC,QAAQ;QAAY,aAAa;kBAC5C,cAAA,8OAAC,sLAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAAc;;;;;;;;;;;AAGvD","debugId":null}}]
}