{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/app/server/trpc.ts"],"sourcesContent":["import { initTRPC } from '@trpc/server'\r\n\r\nconst t = initTRPC.create()\r\n\r\nexport const router = t.router\r\nexport const publicProcedure = t.procedure"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,IAAI,mKAAA,CAAA,WAAQ,CAAC,MAAM;AAElB,MAAM,SAAS,EAAE,MAAM;AACvB,MAAM,kBAAkB,EAAE,SAAS","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nconst globalForPrisma = global as unknown as { prisma: typeof prisma }\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\r\n\r\nexport default prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAE/B,MAAM;AAEN,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/app/server/routers/posts.ts"],"sourcesContent":["import z from 'zod'\r\nimport { publicProcedure, router } from '../trpc'\r\nimport  prisma  from '@/lib/prisma'\r\n\r\nconst postSchema = z.object({\r\n  title: z.string(),\r\n  content: z.string(),\r\n  authorId: z.string(),\r\n})\r\n\r\nexport const postRouter = router({\r\n\r\n    getPost: publicProcedure.input(z.object({ id: z.string() })).query(async ({ input }) => {\r\n    return await prisma.post.findUnique({\r\n      where: { id: parseInt(input.id) },\r\n    })\r\n  }),\r\n\r\n  getPosts: publicProcedure.query(async () => {\r\n    return await prisma.post.findMany()\r\n  }),\r\n   createPosts: publicProcedure.input(postSchema).mutation(async ({ input }) => {\r\n    return await prisma.post.create({\r\n      data: {\r\n        title: input.title,\r\n        content: input.content,\r\n        authorId: input.authorId,\r\n      },\r\n    })\r\n  }),\r\n})\r\n\r\nexport type PostRouter = typeof postRouter"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,aAAa,8IAAA,CAAA,UAAC,CAAC,MAAM,CAAC;IAC1B,OAAO,8IAAA,CAAA,UAAC,CAAC,MAAM;IACf,SAAS,8IAAA,CAAA,UAAC,CAAC,MAAM;IACjB,UAAU,8IAAA,CAAA,UAAC,CAAC,MAAM;AACpB;AAEO,MAAM,aAAa,CAAA,GAAA,uHAAA,CAAA,SAAM,AAAD,EAAE;IAE7B,SAAS,uHAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,8IAAA,CAAA,UAAC,CAAC,MAAM,CAAC;QAAE,IAAI,8IAAA,CAAA,UAAC,CAAC,MAAM;IAAG,IAAI,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE;QACnF,OAAO,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAClC,OAAO;gBAAE,IAAI,SAAS,MAAM,EAAE;YAAE;QAClC;IACF;IAEA,UAAU,uHAAA,CAAA,kBAAe,CAAC,KAAK,CAAC;QAC9B,OAAO,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ;IACnC;IACC,aAAa,uHAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,YAAY,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE;QACvE,OAAO,MAAM,+GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,MAAM;gBACJ,OAAO,MAAM,KAAK;gBAClB,SAAS,MAAM,OAAO;gBACtB,UAAU,MAAM,QAAQ;YAC1B;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/app/api/trpc/%5Btrpc%5D/route.ts"],"sourcesContent":["import { fetchRequestHandler } from '@trpc/server/adapters/fetch'\r\nimport { postRouter } from '@/app/server/routers/posts'\r\n\r\nconst appRouter = router({\r\n    posts: postRouter,\r\n    python: pythonRouter,\r\n})\r\n\r\nconst handler = (req: Request) =>\r\n  fetchRequestHandler({\r\n    endpoint: '/api/trpc',\r\n    req,\r\n    router: postRouter,\r\n    createContext: () => ({}),\r\n  })\r\n\r\nexport { handler as GET, handler as POST }"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,YAAY,OAAO;IACrB,OAAO,mIAAA,CAAA,aAAU;IACjB,QAAQ;AACZ;AAEA,MAAM,UAAU,CAAC,MACf,CAAA,GAAA,yKAAA,CAAA,sBAAmB,AAAD,EAAE;QAClB,UAAU;QACV;QACA,QAAQ,mIAAA,CAAA,aAAU;QAClB,eAAe,IAAM,CAAC,CAAC,CAAC;IAC1B","debugId":null}}]
}