{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jplk2/Documents/MIT%20SLOAN/hackathon-ui/app/chat/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { Box, Paper, Typography, TextField, IconButton, Avatar, Stack, Button, CircularProgress } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { trpc } from '@/app/_trpc/client';\r\n\r\ninterface Message {\r\n    role: \"user\" | \"ai\";\r\n    content: string;\r\n}\r\n\r\nexport default function ChatPage() {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [audioUrl, setAudioUrl] = useState<string | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n    // tRPC mutations\r\n    const chatMutation = trpc.python.chat.useMutation();\r\n    const talkFileMutation = trpc.python.talkFile.useMutation();\r\n    const healthQuery = trpc.python.health.useQuery();\r\n\r\n    React.useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const handleSend = async () => {\r\n        if (!input.trim()) return;\r\n        setLoading(true);\r\n        const userMsg: Message = { role: \"user\", content: input };\r\n        setMessages((prev) => [...prev, userMsg]);\r\n        setInput(\"\");\r\n        try {\r\n            const res = await chatMutation.mutateAsync({\r\n                history: [...messages, userMsg],\r\n                message: input,\r\n            });\r\n            setMessages(res.history.map((msg: { role: string; content: string }) => ({\r\n                role: (msg.role === \"user\" || msg.role === \"ai\") ? msg.role : \"ai\",\r\n                content: msg.content,\r\n            })));\r\n        } catch (e) {\r\n            setMessages((prev) => [...prev, { role: \"ai\", content: \"Error: Could not get response.\" }]);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    const playAudio = (urlOrBase64: string, mimeType?: string) => {\r\n        // If it's a base64 string, create a blob URL\r\n        if (urlOrBase64.startsWith('data:') || urlOrBase64.startsWith('blob:') || urlOrBase64.startsWith('http')) {\r\n            const audio = new Audio(urlOrBase64);\r\n            audio.play();\r\n            setAudioUrl(urlOrBase64);\r\n        } else {\r\n            // Assume base64\r\n            const type = mimeType || 'audio/mpeg';\r\n            const byteCharacters = atob(urlOrBase64);\r\n            const byteNumbers = new Array(byteCharacters.length);\r\n            for (let i = 0; i < byteCharacters.length; i++) {\r\n                byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n            }\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n            const blob = new Blob([byteArray], { type });\r\n            const blobUrl = URL.createObjectURL(blob);\r\n            const audio = new Audio(blobUrl);\r\n            audio.play();\r\n            setAudioUrl(blobUrl);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // File-based audio (not streaming)\r\n    const handleTalkFile = async () => {\r\n        if (!input.trim()) return;\r\n        setLoading(true);\r\n        try {\r\n            const res = await talkFileMutation.mutateAsync({\r\n                history: messages,\r\n                message: input,\r\n            });\r\n            if (res.audioBase64) playAudio(res.audioBase64, res.mimeType);\r\n        } catch (e) {\r\n            setAudioUrl(null);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 500, mx: \"auto\", p: 2 }}>\r\n            <Typography variant=\"h5\" sx={{ mb: 2, textAlign: \"center\" }}>\r\n                Python FastAPI Chat\r\n            </Typography>\r\n            <Paper elevation={3} sx={{ p: 2, minHeight: 400, mb: 2, display: \"flex\", flexDirection: \"column\", height: 400 }}>\r\n                <Box sx={{ flex: 1, overflowY: \"auto\", mb: 2, px: 1 }}>\r\n                    {messages.map((msg, i) => (\r\n                        <Stack\r\n                            key={i}\r\n                            direction={msg.role === \"user\" ? \"row-reverse\" : \"row\"}\r\n                            spacing={1}\r\n                            alignItems=\"flex-end\"\r\n                            sx={{ mb: 1 }}\r\n                        >\r\n                            <Avatar sx={{ bgcolor: msg.role === \"user\" ? \"primary.main\" : \"grey.400\", width: 32, height: 32 }}>\r\n                                {msg.role === \"user\" ? \"U\" : \"AI\"}\r\n                            </Avatar>\r\n                            <Box\r\n                                sx={{\r\n                                    bgcolor: msg.role === \"user\" ? \"primary.main\" : \"grey.200\",\r\n                                    color: msg.role === \"user\" ? \"#fff\" : \"#222\",\r\n                                    px: 2,\r\n                                    py: 1,\r\n                                    borderRadius: 2,\r\n                                    maxWidth: 260,\r\n                                    wordBreak: \"break-word\",\r\n                                }}\r\n                            >\r\n                                <Typography variant=\"body2\">{msg.content}</Typography>\r\n                            </Box>\r\n                        </Stack>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                </Box>\r\n                {audioUrl && (\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <audio src={audioUrl} controls autoPlay style={{ width: \"100%\" }} />\r\n                    </Box>\r\n                )}\r\n                {loading && <CircularProgress size={24} sx={{ mx: \"auto\", display: \"block\" }} />}\r\n            </Paper>\r\n            <Box sx={{ display: \"flex\", gap: 1, mb: 1 }}>\r\n                <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={input}\r\n                    onChange={e => setInput(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    multiline\r\n                    maxRows={3}\r\n                    InputProps={{\r\n                        sx: {\r\n                            backgroundColor: '#fff',\r\n                            color: '#222',\r\n                        },\r\n                    }}\r\n                />\r\n                <IconButton color=\"primary\" onClick={handleSend} disabled={loading} sx={{ alignSelf: \"end\" }}>\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </Box>\r\n            <Box sx={{ display: \"flex\", gap: 1, justifyContent: \"center\" }}>\r\n                <Button variant=\"outlined\" onClick={handleTalkFile} disabled={loading || !input.trim()}>\r\n                    Talk File\r\n                </Button>\r\n            </Box>\r\n            <Box sx={{ mt: 2, textAlign: \"center\" }}>\r\n                <Typography variant=\"caption\" color={healthQuery.data?.status === \"ok\" ? \"success.main\" : \"error.main\"}>\r\n                    Python API Health: {healthQuery.isLoading ? \"Checking...\" : healthQuery.data?.status || \"Unavailable\"}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}